import{h as l}from"./httpClient-Bnjko1En.js";import{A as a}from"./index-BHEtbWzy.js";class c{static async login(o,n,s){try{console.log("AuthApiService: enviando solicitud de login",{email:o,role:s});const e=await l.get(`/users?email=${o}&password=${n}&role=${s}`);if(console.log("AuthApiService: respuesta recibida:",e.data),e.data&&e.data.length>0){const t=e.data[0];if(t&&t.email)return t}return console.error("AuthApiService: respuesta sin datos válidos o usuario no encontrado"),null}catch(e){throw console.error("AuthApiService: error en login:",e.response||e),e.response&&e.response.status===404?new Error("Endpoint de autenticación no encontrado"):e}}static logout(){a.clear()}}class g{constructor(){}async login({email:o,password:n,role:s}){var e,t;try{console.log("AuthService: iniciando login con",{email:o,role:s});const r=await c.login(o,n,s);if(!r)throw console.error("AuthService: datos de usuario nulos después del login"),new Error("Credenciales incorrectas");const i=new a(r.id,r.email,r.name,r.role,r.avatar);return i.save(),console.log("AuthService: login exitoso, sesión creada:",i),i}catch(r){throw console.error("AuthService: error en autenticación:",r),((e=r.response)==null?void 0:e.status)===401||((t=r.response)==null?void 0:t.status)===400?new Error("Credenciales incorrectas"):new Error("Error al iniciar sesión. Por favor, intenta nuevamente.")}}logout(){console.log("AuthService: cerrando sesión"),c.logout()}getCurrentSession(){return a.fromStorage()}isAuthenticated(){const o=this.getCurrentSession();return(o==null?void 0:o.isValid())??!1}}export{g as A};
